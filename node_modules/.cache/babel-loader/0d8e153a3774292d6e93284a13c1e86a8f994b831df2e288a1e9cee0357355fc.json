{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joan\\\\react-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport Confirmation from './confirmation';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Use useNavigate for navigation\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Here, you would normally send your message to the backend.\n    // For example:\n    // await axios.post('/api/messages', { message });\n\n    // After successful submission, navigate to the confirmation page\n    navigate('/confirmation');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message here...\",\n          rows: \"5\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n// Wrap App with Router and define routes\n_s(App, \"qQ34hB+YLw2wpIxbE5UhSnzW6uI=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nconst AppWrapper = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/confirmation\",\n        element: /*#__PURE__*/_jsxDEV(Confirmation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c2 = AppWrapper;\nexport default AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","useNavigate","Confirmation","axios","jsxDEV","_jsxDEV","App","_s","message","setMessage","navigate","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","rows","required","type","_c","AppWrapper","path","element","_c2","$RefreshReg$"],"sources":["C:/Users/joan/react-frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport Confirmation from './confirmation';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Use useNavigate for navigation\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Here, you would normally send your message to the backend.\n    // For example:\n    // await axios.post('/api/messages', { message });\n    \n    // After successful submission, navigate to the confirmation page\n    navigate('/confirmation');\n  };\n\n  return (\n    <div className=\"App\">  {/* Updated className for main container */}\n      <div className=\"container\">\n        <h1>Submit Your Message</h1>\n        <form onSubmit={handleSubmit}>\n          <textarea\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Type your message here...\"\n            rows=\"5\"\n            required\n          ></textarea>\n          <button type=\"submit\" className=\"primary\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Wrap App with Router and define routes\nconst AppWrapper = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/confirmation\" element={<Confirmation />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default AppWrapper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}